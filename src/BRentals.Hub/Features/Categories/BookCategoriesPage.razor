@page "/categories"

<section class="hero">
    <div class="hero-body pb-1">
        <p class="title">
            Book Categories
        </p>
        <p class="subtitle">
            View all your favourite book categories
        </p>
        
        <BookInCategorySearch OnSearching="Searching"/>
        
        <div>
            <button @onclick="LoadAsync" class="button is-primary is-outlined">
                <i class="fa fa-recycle mr-1"></i>
                Refresh
            </button>
        </div>
        
        <div class="mt-2">
            <LoadingBar IsLoading="IsLoading"></LoadingBar>
        </div>
    </div>
</section>

<section class="section pt-0">
    <table class="table is-fullwidth">
        <thead>
        <tr>
            <th>Category</th>
            <th>Total Books</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var category in Categories)
        {
            <tr>
                <td>
                    <NavLink href="@BooksPageUrl(category.Name)">
                        @category.Name
                    </NavLink>
                </td>
                <td>@category.BooksCount</td>
            </tr>
        }
        </tbody>
    </table>
</section>

@code {

    [Inject]
    public IBRentalsApiClient Client { get; set; } = null!;
    
    [Inject]
    public BookCategoriesState BookCategoriesState { get; set; } = null!;

    private string? Continuation { get; set; }

    private bool IsLoading { get; set; }

    private List<BookCategoryDto> Categories { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await LoadAsync();
        await base.OnInitializedAsync();
    }

    private void Searching(bool searching) =>
        IsLoading = searching;

    private async Task LoadAsync()
    {
        IsLoading = true;
        var (isSuccessful, bookCategoryDtos, continuation) =
            await Client.GetBookCategoriesAsync();
        IsLoading = false;

        if (isSuccessful)
        {
            BookCategoriesState.Update(bookCategoryDtos);
            Categories = bookCategoryDtos;
            Continuation = continuation;
        }
    }

    private string BooksPageUrl(string category) =>
        $"categories/{category}/books";

}