@using System.ComponentModel.DataAnnotations
<div class="content pt-0">

    <EditForm EditContext="EditContext" OnValidSubmit="Search">
        <DataAnnotationsValidator/>

        <div class="field mb-0 has-addons">
            <p class="control is-expanded">
                <InputText id="brentals-isbn" @bind-Value="@ViewModel.Isbn" class="input is-medium" type="text" placeholder="ISBN: 123-321-123-5"/>
                <ValidationMessage For="() => ViewModel.Isbn"></ValidationMessage>
            </p>
            <p class="control">
                <button type="submit" class="is-medium button">
                    Search
                </button>
            </p>
        </div>
    </EditForm>

</div>

@code {

    private class BookRentalSearchViewModel
    {
        [RegularExpression("[0-9-]{13}", ErrorMessage = "An ISBN can only contain numbers and dashes (-) and be 13 characters")]
        public string Isbn { get; set; } = null!;
    }

    private EditContext EditContext { get; set; } = null!;

    [Parameter]
    public EventCallback<string> OnSearch { get; set; }
    
    private BookRentalSearchViewModel ViewModel { get; set; } = new();

    [Parameter]
    public string Isbn
    {
        get => _isbn;
        set
        {
            ViewModel.Isbn = value;
            _isbn = value;
        }
    }

    protected override void OnInitialized()
    {
        EditContext = new(ViewModel);
        base.OnInitialized();
    }

    private async Task Search() => 
        await OnSearch.InvokeAsync(ViewModel.Isbn);

    private string _isbn;
}