@using BRentals.Hub.Features.Shared.Extensions
@if (Rentals.Any() && IsBookRentals)
{
    <h3 class="subtitle">@Rentals.First().Title - @Rentals.First().Isbn</h3>
}

<table class="table is-fullwidth">
    <thead>
    <tr>
        @if (!IsBookRentals)
        {
            <th>Title</th>
        }

        <th>Username</th>
        <th>Rented</th>
        <th>Returned</th>
        <th>Reference</th>
        <th>Actions</th>
    </tr>
    </thead>
    @if (Rentals.Any())
    {
        <tbody>
        @foreach (var rental in Rentals)
        {
            <tr>
                @if (!IsBookRentals)
                {
                    <th>@rental.Title</th>
                }
                @if (IsBookRentals)
                {
                    <th>
                        <a href="@NavigationUtilities.ViewUserRentals(rental.CustomerUsername)" target="_blank">
                            @rental.CustomerUsername
                        </a>
                    </th>
                }
                else
                {
                    <th>@rental.CustomerUsername</th>
                }
                <th>@GetTimeDisplay(rental.RentedUtc)</th>
                <th>@GetTimeDisplay(rental.ReturnedUtc)</th>
                <th>
                    <div class="tags">
                        <div class="tag">
                            @rental.Id
                        </div>
                    </div>
                </th>
                <th>
                    <button @onclick="() => Return(rental, rental.CustomerUsername)" class="button is-small is-link is-light">
                        <i class="fas fa-arrow-right mr-1"></i>
                        Return
                    </button>
                </th>
            </tr>
        }
        </tbody>
    }
</table>

@if (Rentals.Any() is false)
{
    <div class="is-flex is-justify-content-center is-align-content-center">
        <h3 class="title mb-5">Please search to view rentals</h3>
    </div>
}

@if (Rentals.Any())
{
    <div class="is-flex is-justify-content-center is-align-content-center">
        <button @onclick="() => OnLoadMore.InvokeAsync()" class="button is-primary is-outlined">Load More ...</button>
    </div>
}

@code {

    [Parameter]
    public bool IsBookRentals { get; set; }

    [Parameter]
    public List<RentalDto> Rentals { get; set; } = new();

    [Parameter]
    public EventCallback OnLoadMore { get; set; }

    [CascadingParameter]
    public IModalService ModalService { get; set; } = null!;

    private string GetTimeDisplay(DateTime? returned) =>
        returned?.ToString("dd-MMM-yy hh:mm tt") ?? "n/a";

    private void Return(RentalDto rental, string username) =>
        ModalService.ShowReturnBookModal(rental);

}